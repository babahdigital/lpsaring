# ===============================================================
#  Docker-Compose â€“ Lingkungan Produksi
# ===============================================================
name: hotspot-portal-prod

services:
  # ------------------------
  #  Database PostgreSQL
  # ------------------------
  db:
    image: postgres:15-alpine
    container_name: hotspot_prod_postgres_db
    env_file:
      - .env.prod
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    networks:
      - hotspot_prod_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -q"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: always

  # ------------------------
  #  Redis
  # ------------------------
  redis:
    image: redis:7-alpine
    container_name: hotspot_prod_redis_cache
    volumes:
      - redis_prod_data:/data
    networks:
      - hotspot_prod_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always

  # ------------------------
  #  Flask Backend (Gunicorn)
  # ------------------------
  backend:
    image: babahdigital/sobigidul_backend:latest
    container_name: hotspot_prod_flask_backend
    env_file:
      - .env.prod
    # Tidak perlu mount .env lagi; variabel sudah di-inject.
    command:
      - "gunicorn"
      - "--bind"
      - "0.0.0.0:5010"
      - "run:app"
      - "--workers=4"
      - "--timeout=60"
      - "--log-level=info"
      - "--access-logfile=-"
      - "--error-logfile=-"
    ports:
      - "5010:5010"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hotspot_prod_network
    restart: always

  # ------------------------
  #  Celery Worker
  # ------------------------
  celery_worker:
    image: babahdigital/sobigidul_backend:latest
    container_name: hotspot_prod_celery_worker
    env_file:
      - .env.prod
    command: >
      celery -A app.extensions.celery_app worker
      --loglevel=info
      --concurrency=4
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - hotspot_prod_network
    restart: always

  # ------------------------
  #  Nuxt Frontend
  # ------------------------
  frontend:
    image: babahdigital/sobigidul_frontend:latest
    container_name: hotspot_prod_nuxt_frontend
    env_file:
      - .env.prod
    # Pastikan Nuxt Nitro memakai port 3010
    environment:
      - PORT=${NUXT_PORT:-3010}
    networks:
      - hotspot_prod_network
    restart: always

  # ------------------------
  #  Nginx Reverse-Proxy
  # ------------------------
  nginx:
    image: nginx:stable-alpine
    container_name: hotspot_prod_nginx_proxy
    ports:
      - "80:80"
      # Aktifkan 443 jika sudah punya sertifikat SSL
      # - "443:443"
    volumes:
      - ./infrastructure/nginx/conf.d/app.conf:/etc/nginx/conf.d/default.conf:ro
      - ./infrastructure/nginx/logs:/var/log/nginx
      - ./infrastructure/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      backend:
        condition: service_started
      frontend:
        condition: service_started
    networks:
      - hotspot_prod_network
    restart: always

# ------------------------
#  Volumes & Networks
# ------------------------
volumes:
  postgres_prod_data:
    driver: local
  redis_prod_data:
    driver: local

networks:
  hotspot_prod_network:
    driver: bridge
    name: hotspot_prod_net