# ===============================================
#  Build & Push Multi-arch Docker Images
# ===============================================

name: Build and Push Multi-arch Docker Images

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  DOCKER_BUILDKIT: 1            # pastikan BuildKit aktif

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write           # diperlukan untuk push image
    strategy:
      fail-fast: false
      matrix:
        include:
          # Tambah entri di sini jika ada service lain
          - service: backend
            context: ./backend
            image: babahdigital/hotspot_backend
          - service: frontend
            context: ./frontend
            image: babahdigital/hotspot_frontend

    steps:
      # 1. Ambil kode
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. QEMU (emulasi arsitektur non-host)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 3. Buildx builder
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      # 4. Login ke Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5. Otomatis buat daftar tag (latest + sha)
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}
          tags: |
            type=raw,value=latest
            type=sha

      # 6. Build & Push
      - name: Build and push ${{ matrix.service }} image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          platforms: linux/amd64,linux/arm64          # tambah linux/arm/v7 jika perlu
          push: true
          provenance: false                           # skip SBOM untuk image ringan
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max