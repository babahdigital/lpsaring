# Konfigurasi server utama yang mendengarkan di port 80
server {
    listen 80;
    server_name localhost; # Ganti dengan domain Anda jika sudah ada, misal: hotspot.yourdomain.com

    # ----- AWAL KONFIGURASI REAL IP (Penting untuk Nginx di dalam Docker) -----
    # Nginx akan mempercayai IP yang berasal dari rentang ini sebagai proxy.
    # Ini memastikan $remote_addr akan berisi IP klien yang sebenarnya,
    # bukan IP dari kontainer Docker atau gateway.
    set_real_ip_from 172.16.0.0/12;  # Rentang IP default Docker Bridge Network (172.16.0.0 - 172.31.255.255)
    # set_real_ip_from 192.168.0.0/16; # Opsional: Jika ada proxy/router lain di jaringan lokal Anda sebelum Nginx
    # set_real_ip_from 10.0.0.0/8;    # Opsional: Rentang IP umum lainnya untuk jaringan lokal

    # Header yang akan digunakan Nginx untuk mengambil IP asli klien.
    # Docker biasanya menambahkan X-Forwarded-For.
    real_ip_header X-Forwarded-For;

    # Jika X-Forwarded-For berisi rantai IP (misal: client_ip, proxy1_ip, proxy2_ip),
    # 'on' akan membuat Nginx mencari IP klien yang paling kiri (asli) setelah melewati
    # semua IP proxy yang telah didefinisikan dalam 'set_real_ip_from'.
    real_ip_recursive on;
    # ----- AKHIR KONFIGURASI REAL IP -----

    client_max_body_size 10M; # Batasi ukuran body request maksimal 10MB
    access_log /var/log/nginx/access.log; # Lokasi log akses
    error_log /var/log/nginx/error.log warn; # Lokasi log error, level 'warn' untuk tidak terlalu banyak log

    # Lokasi untuk API Backend
    location /api/ {
        # proxy_buffering off; # Aktifkan ini jika backend Anda melibatkan streaming data atau file besar

        # Header untuk meneruskan informasi asli client dan request ke backend
        # $host: Host header dari request klien
        # $remote_addr: IP klien yang sudah diproses oleh realip_module (IP asli)
        # $proxy_add_x_forwarded_for: Menambahkan $remote_addr (IP asli) ke header X-Forwarded-For yang sudah ada
        # $scheme: Protokol request (http/https)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        # Optimasi koneksi ke backend
        proxy_http_version 1.1;
        # Penting untuk menjaga koneksi keep-alive yang dikelola oleh Nginx,
        # agar Nginx dapat menggunakan kembali koneksi ke backend.
        proxy_set_header Connection ""; # Hapus Connection header yang masuk

        proxy_pass http://backend:5010; # Mengarahkan request ke service 'backend' pada port 5010
        proxy_read_timeout 300s;       # Waktu tunggu membaca respons dari backend
        proxy_connect_timeout 75s;     # Waktu tunggu koneksi ke backend
    }

    # Lokasi default untuk Frontend Nuxt
    location / {
        # Header untuk meneruskan informasi asli client dan request ke frontend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        # Optimasi koneksi & dukungan WebSocket untuk Nuxt (misal: Hot Module Replacement di dev mode)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade; # Diperlukan untuk WebSocket
        proxy_set_header Connection "upgrade";  # Diperlukan untuk WebSocket

        proxy_pass http://frontend:3010; # Mengarahkan request ke service 'frontend' pada port 3010
        proxy_redirect off;              # Menonaktifkan modifikasi header Location oleh Nginx, umumnya disarankan untuk SPA/Nuxt
    }

    # Opsional: Error pages kustom
    # error_page 500 502 503 504 /50x.html;
    # location = /50x.html {
    #     root /usr/share/nginx/html;
    # }

    # Opsional: Konfigurasi SSL/HTTPS
    # listen 443 ssl;
    # ssl_certificate /etc/nginx/ssl/default.crt;
    # ssl_certificate_key /etc/nginx/ssl/default.key;
    # include /etc/nginx/conf.d/ssl_params.conf; # File ini bisa berisi pengaturan SSL/TLS umum
}